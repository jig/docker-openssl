# HTTPS server
# https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html

server {
       listen 443 ssl;
       server_name localhost;

       root html;
       index index.html index.htm;

       ssl on;
       ssl_certificate /root/certs/server.crt;
       ssl_certificate_key /root/server/private/server.key;
       
       # uncomment this if using CRL
       # ssl_crl /root/crl/crl.pem;

       ssl_protocols TLSv1.2;
       ssl_ciphers "ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA256";
       ssl_prefer_server_ciphers on;

       # caching: timeout (m=minutes) and size (m=megabytes: 4000 sessions aprox per MB)
       ssl_session_timeout 5m;
       ssl_session_cache shared:SSL:10m;

       ssl_ecdh_curve secp384r1;
       ssl_dhparam /root/dhparams/dhparam.pem;
       
       # Activate this to force client authentication:
       # ssl_client_certificate /root/certs/root.crt;
       # ssl_verify_client on;
       # ssl_verify_depth 2;
      
       location / {
               try_files $uri $uri/ =404;
       }
}

server {
        if ($host = localhost) {
                return 301 https://$host$request_uri;
        } 
        listen 80;
        return 404; 
}
